{"version":3,"file":"static/js/193.66981cf2.chunk.js","mappings":"wPAIIA,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,iDCDfE,GAAcC,EAAAA,EAAAA,GAAiB,IAoBxBC,GAAsBC,EAAAA,EAAAA,GAAU,CAC3CC,KAAM,wBAD2BD,EAlBZ,SAACE,GACtB,OACE,kBAAMC,SAAUD,EAAME,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,YAAY,qBACZC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUb,GACrBc,KAAK,sBAGT,0BACE,6C,UCjBR,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0BCEnKC,EAAa,SAACV,GACzB,OACE,gBAAKW,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACE,SAAC,KAAD,CAASC,GAAE,mBAAcb,EAAMc,IAA/B,SAAsCd,EAAMS,UCHrCM,EAAU,SAACf,GACtB,OAAO,gBAAKW,UAAWC,EAAAA,OAAhB,SAA2BZ,EAAMgB,WCmB1C,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAAC1B,GACrB,MAAO,CACL2B,YAAa3B,EAAM2B,gBAGE,SAACC,GACxB,MAAO,CACLC,YAAa,SAACC,GACZF,GAASG,EAAAA,EAAAA,GAAmBD,ULTF,SAACE,GAAe,IACxCC,EADuC,0IAE3C,WACE,OAAKC,KAAK1B,MAAMP,QAGT,SAAC+B,GAAD,UAAeE,KAAK1B,SAFlB,SAAC,KAAD,CAAUa,GAAI,eAJkB,GACbc,EAAAA,WAYhC,OAHqCT,EAAAA,EAAAA,IAAQ3B,EAAR2B,CACnCO,KKIJ,ECjBuB,SAACzB,GACtB,IAAIR,EAAQQ,EAAMmB,YAEdS,EAAkBpC,EAAMqC,QAAQC,KAAI,SAACC,GACvC,OAAO,SAACrB,EAAD,CAAYD,KAAMsB,EAAEtB,KAAiBK,GAAIiB,EAAEjB,IAAZiB,EAAEjB,OAGtCkB,EAAmBxC,EAAMyC,SAASH,KAAI,SAACI,GACzC,OAAO,SAACnB,EAAD,CAASC,QAASkB,EAAElB,SAAckB,EAAEpB,OAGxBtB,EAAM8B,eAM3B,OAAKtB,EAAMP,QAIT,iBAAKkB,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SAAiCgB,KAEjC,iBAAKjB,UAAWC,EAAAA,SAAhB,WACE,yBAAMoB,KACN,SAACnC,EAAD,CAAqBI,SAbP,SAACkC,GACnBnC,EAAMqB,YAAYc,EAAOb,0BAIlB,SAAC,KAAD,CAAUT,GAAI","sources":["hoc/withAuthRedirect.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {\r\n        return <Redirect to={'/login'} />;\r\n      }\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Enter your message\"\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const AddMessageReduxForm = reduxForm({\r\n  form: 'dialogAddMessageForm',\r\n})(AddMessageForm);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__czx2+\",\"dialogsItems\":\"Dialogs_dialogsItems__mZ4Mr\",\"active\":\"Dialogs_active__rl5Dq\",\"messages\":\"Dialogs_messages__u-GxT\",\"message\":\"Dialogs_message__WBjtq\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nexport const DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + ' ' + s.active}>\r\n      <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n","import s from './../Dialogs.module.css';\r\n\r\n\r\nexport const Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};","import { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {\r\n  sendMessageCreator,\r\n} from '../../redux/dialogs-reducer';\r\nimport { Dialogs } from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { AddMessageReduxForm } from './AddMessageForm/AddMessageForm';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\n\r\nexport const Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => {\r\n    return <DialogItem name={d.name} key={d.id} id={d.id} />;\r\n  });\r\n\r\n  let messagesElements = state.messages.map((m) => {\r\n    return <Message message={m.message} key={m.id} />;\r\n  });\r\n\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) {\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","name","DialogItem","className","s","to","id","Message","message","compose","connect","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","Component","RedirectComponent","this","React","dialogsElements","dialogs","map","d","messagesElements","messages","m","values"],"sourceRoot":""}