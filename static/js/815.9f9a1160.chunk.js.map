{"version":3,"file":"static/js/815.9f9a1160.chunk.js","mappings":"yPACA,EAAmC,sCAAnC,EAAqF,+B,sCCExEA,EAAyB,SAACC,GAErC,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAKC,EAAL,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAzC,eAAKA,EAAL,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAUL,EAAMI,UACf,CAACJ,EAAMI,SAeV,OACE,4BACIF,IACA,0BACE,iBAAMK,cAjBW,WACvBJ,GAAY,IAgBN,SAAwCH,EAAMI,QAAU,WAG3DF,IACC,0BACE,kBACEM,SAda,SAACC,GACtBJ,EAAUI,EAAMC,cAAcC,QActBC,OApBiB,WACzBT,GAAY,GACZH,EAAMa,aAAaT,IAmBXU,WAAW,EACXH,MAAOP,UCjCNW,EAAc,SAACf,GAC1B,IAAKA,EAAMgB,QACT,OAAO,SAACC,EAAA,EAAD,IAQT,OACE,0BACE,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IAAKpB,EAAMgB,QAAQK,OAAOC,OAASC,EACnCL,UAAWC,KAEb,yBACGnB,EAAMwB,UACL,kBAAOC,KAAM,OAAQjB,SAfH,SAACC,GACvBA,EAAMiB,OAAOC,MAAMC,QACrB5B,EAAM6B,UAAUpB,EAAMiB,OAAOC,MAAM,UAgBjC,yBAAM3B,EAAMgB,QAAQc,YACpB,yBAAM9B,EAAMgB,QAAQe,WACpB,SAAChC,EAAD,CACEK,OAAQJ,EAAMI,OACdS,aAAcb,EAAMa,qBC9B9B,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCCVmB,EAAO,SAAChC,GACnB,OACE,iBAAKkB,UAAWC,EAAhB,WACE,gBAAKC,IAAI,mEACRpB,EAAMiC,SACP,0BACE,oCAAYjC,EAAMkC,oB,uCCEpBC,GAAcC,EAAAA,EAAAA,GAAiB,IAkB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CACpCC,KAAM,yBADoBD,EAhBL,SAACtC,GACtB,OACE,kBAAMwC,SAAUxC,EAAMyC,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUZ,QAGzB,0BACE,iDCFKa,GAAmBC,EAAAA,EAAAA,KAdV,SAACC,GACrB,MAAO,CACLC,MAAOD,EAAME,YAAYD,MACzBE,YAAaH,EAAME,YAAYC,gBAGV,SAACC,GACxB,MAAO,CACLC,QAAS,SAACF,GACRC,GAASE,EAAAA,EAAAA,IAAqBH,QAKJJ,EDWT,SAACjD,GACtB,IAAMyD,EAAgBzD,EAAMmD,MAAMO,KAAI,SAACC,EAAGC,GACxC,OAAO,SAAC5B,EAAD,CAAMC,QAAS0B,EAAE1B,QAAkBC,WAAYyB,EAAEzB,YAAlB0B,MASxC,OACE,iBAAK1C,UAAWC,EAAhB,WACE,sCACA,SAACkB,EAAD,CAAqBG,SAPT,SAACqB,GACf7D,EAAMuD,QAAQM,EAAOR,iBAOnB,gBAAKnC,UAAWC,EAAhB,SAA0BsC,UE5CnBK,EAAU,SAAC9D,GACtB,OACE,4BACE,SAACe,EAAD,CACEc,UAAW7B,EAAM6B,UACjBL,QAASxB,EAAMwB,QACfR,QAAShB,EAAMgB,QACfZ,OAAQJ,EAAMI,OACdS,aAAcb,EAAMa,gBAEtB,SAACmC,EAAD,QCDAe,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAkCH,OAlCGA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MACJ,WACE,IAAIC,EAASC,KAAKjE,MAAMkE,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAKjE,MAAMoE,mBAElBH,KAAKjE,MAAMqE,QAAQC,KAAK,UAG5BL,KAAKjE,MAAMuE,eAAeP,GAC1BC,KAAKjE,MAAMwE,cAAcR,KAC1B,+BAED,WACEC,KAAKQ,mBACN,gCAED,SAAmBC,GACbT,KAAKjE,MAAMkE,MAAMC,OAAOH,SAAWU,EAAUR,MAAMC,OAAOH,QAC5DC,KAAKQ,mBAER,oBAED,WACE,OACE,SAACX,GAAD,kBACMG,KAAKjE,OADX,IAEEwB,SAAUyC,KAAKjE,MAAMkE,MAAMC,OAAOH,OAClChD,QAASiD,KAAKjE,MAAMgB,QACpBZ,OAAQ6D,KAAKjE,MAAMI,OACnBS,aAAcoD,KAAKjE,MAAMa,aACzBgB,UAAWoC,KAAKjE,MAAM6B,iBAG3B,EAlCGkC,CAAyBY,EAAAA,WA4C/B,GAAeC,EAAAA,EAAAA,KACb3B,EAAAA,EAAAA,KARoB,SAACC,GAAD,MAAY,CAChClC,QAASkC,EAAME,YAAYpC,QAC3BZ,OAAQ8C,EAAME,YAAYhD,OAC1BgE,iBAAkBlB,EAAM2B,KAAKb,OAC7Bc,OAAQ5B,EAAM2B,KAAKC,UAIM,CACvBP,eAAAA,EAAAA,GACAC,cAAAA,EAAAA,GACA3D,aAAAA,EAAAA,GACAgB,UAAAA,EAAAA,KAEFkD,EAAAA,GAPF,CAQEhB","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GzUt4\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3NxcE\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import s from './ProfileInfo.module.css';\r\nimport { Preloader } from '../../Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks';\r\n\r\nexport const ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (event) =>{\r\n    if (event.target.files.length){\r\n      props.savePhoto(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img\r\n          src={props.profile.photos.large || userPhoto}\r\n          className={s.mainPhoto}\r\n        />\r\n        <div>\r\n          {props.isOwner && (\r\n            <input type={'file'} onChange={onMainPhotoSelected} />\r\n          )}\r\n        </div>\r\n        <div>{props.profile.fullName}</div>\r\n        <div>{props.profile.aboutMe}</div>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__mvcPp\",\"posts\":\"MyPosts_posts__xDTfz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ztQiK\"};","import s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://cspromogame.ru//storage/upload_images/avatars/1299.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: 'ProfileAddNewPostForm',\r\n})(AddNewPostForm);\r\n\r\nexport const MyPosts = (props) => {\r\n  const postsElements = props.posts.map((p, id) => {\r\n    return <Post message={p.message} key={id} likesCount={p.likesCount} />;\r\n  });\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addPostActionCreator,\r\n} from '../../../redux/profile-reducer';\r\nimport { MyPosts } from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nexport const MyPostsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyPosts);","import { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  savePhoto,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport { Profile } from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","Preloader","className","s","src","photos","large","userPhoto","isOwner","type","target","files","length","savePhoto","fullName","aboutMe","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","MyPostsContainer","connect","state","posts","profilePage","newPostText","dispatch","addPost","addPostActionCreator","postsElements","map","p","id","values","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}