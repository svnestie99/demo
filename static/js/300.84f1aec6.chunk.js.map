{"version":3,"file":"static/js/300.84f1aec6.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileBlockForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GzUt4\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3NxcE\",\"contact\":\"ProfileInfo_contact__hbK9Q\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status)\r\n  };\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { reduxForm } from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport style from '../../common/FormsControls/FormControls.module.css';\r\n\r\nexport const ProfileBlockForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {props.error && (\r\n        <div className={style.formSummaryError}>{props.error}</div>\r\n      )}\r\n      <div>\r\n        <b>Full name: </b>\r\n        {createField('Full name', 'fullName', [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>\r\n        {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills :</b>\r\n        {createField(\r\n          'My professional skills',\r\n          'lookingForAJobDescription',\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me: </b> {createField('About me', 'aboutMe', [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>{' '}\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>\r\n                {key}:{createField(key, `contacts.${key}`, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const ProfileBlockFormReduxForm = reduxForm({\r\n  form: 'edit-profile',\r\n})(ProfileBlockForm);","import s from './ProfileInfo.module.css';\r\nimport { Preloader } from '../../Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport { ProfileBlockFormReduxForm } from './ProfileBlockForm';\r\n\r\nexport const ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (event) => {\r\n    if (event.target.files.length) {\r\n      props.savePhoto(event.target.files[0]);\r\n    }\r\n  };\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img\r\n          src={props.profile.photos.large || userPhoto}\r\n          className={s.mainPhoto}\r\n        />\r\n        <div>\r\n          {props.isOwner && (\r\n            <input type={'file'} onChange={onMainPhotoSelected} />\r\n          )}\r\n        </div>\r\n        {editMode ? (\r\n          <ProfileBlockFormReduxForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileBlock\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileBlock = (props) => {\r\n  return (\r\n    <div>\r\n      {props.isOwner && (\r\n        <div>\r\n          <button onClick={props.goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name: </b>\r\n        {props.profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>\r\n        {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n      </div>\r\n      {props.profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills :</b>\r\n          {props.profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me: </b> {props.profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>{' '}\r\n        {Object.keys(props.profile.contacts).map((key) => {\r\n          return (\r\n            <Contacts\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={props.profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contacts = (props) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{props.contactTitle}</b>: {props.contactValue}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__mvcPp\",\"posts\":\"MyPosts_posts__xDTfz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ztQiK\"};","import s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://cspromogame.ru//storage/upload_images/avatars/1299.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddNewPostReduxForm = reduxForm({\r\n  form: 'ProfileAddNewPostForm',\r\n})(AddNewPostForm);\r\n\r\nexport const MyPosts = (props) => {\r\n  const postsElements = props.posts.map((p, id) => {\r\n    return <Post message={p.message} key={id} likesCount={p.likesCount} />;\r\n  });\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addPostActionCreator,\r\n} from '../../../redux/profile-reducer';\r\nimport { MyPosts } from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nexport const MyPostsContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyPosts);","import { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport { Profile } from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileBlockFormReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","style","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","s","ProfileInfo","Preloader","src","photos","large","userPhoto","isOwner","target","files","length","savePhoto","initialValues","formData","saveProfile","then","ProfileBlock","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contacts","contactTitle","contactValue","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","Field","name","component","validate","required","MyPostsContainer","connect","state","posts","profilePage","newPostText","dispatch","addPost","addPostActionCreator","postsElements","p","id","values","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}